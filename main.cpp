#include "library2.h"
#include "dsmanager.h"
int main(){
    void* ds = Init();
    AddAgency(ds);
    SellCar(ds, 0, -5, 2);
    SellCar(ds, 0, -5, 2);
    SellCar(ds, 0, -5, 2);
    SellCar(ds, 0, -5, 2);
    SellCar(ds, 0, -5, 2);
    DSset* set0=((*((DSManager *)(ds))->sets)[0]);
    AddAgency(ds);
    SellCar(ds, 1, -4, 3);
    SellCar(ds, 1, -4, 3);
    SellCar(ds, 1, -3, 2);
    SellCar(ds, 1, -3, 3);
    SellCar(ds, 1, -2, 12);
    DSset* set1=((*((DSManager *)(ds))->sets)[1]);
    AddAgency(ds);
    SellCar(ds, 2, -1, 5);
    SellCar(ds, 2, -1, 4);
    SellCar(ds, 2, -1, 3);
    SellCar(ds, 2, -1, 2);
    SellCar(ds, 2, -1, 1);
    SellCar(ds, 2, -1, 0);
    SellCar(ds, 2, 0, 3);
    SellCar(ds, 2, 0, 2);
    SellCar(ds, 2, 0, 2);
    SellCar(ds, 2, 0, 7);
    DSset* set2=((*((DSManager *)(ds))->sets)[2]);
    AddAgency(ds);
    SellCar(ds, 3, 1, 3);
    SellCar(ds, 3, 2, 9);
    SellCar(ds, 3, 3, 5);
    DSset* set3=((*((DSManager *)(ds))->sets)[3]);
    UniteAgencies(ds, 0, -2);
    UniteAgencies(ds, -1, -2);
    UniteAgencies(ds, 5, 6);
    UniteAgencies(ds, 7, 8);
    UniteAgencies(ds, 4, 3);
    std::cout << "0 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    std::cout << "3 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[3])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[3])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    UniteAgencies(ds, 0, 3);
    std::cout << "0 3 unite" <<std::endl;
    set0=((*((DSManager *)(ds))->sets)[0]);
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    set3=((*((DSManager *)(ds))->sets)[3]);
    UniteAgencies(ds, 1, 2);
    set1=((*((DSManager *)(ds))->sets)[1]);
    set2=((*((DSManager *)(ds))->sets)[2]);
    UniteAgencies(ds, 2, 2);
    UniteAgencies(ds, 3, 3);
    UniteAgencies(ds, 0, 0);
    set0=((*((DSManager *)(ds))->sets)[0]);
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    UniteAgencies(ds, 1, 1);
    set1=((*((DSManager *)(ds))->sets)[1]);
    AddAgency(ds);
    SellCar(ds, 4, 4, 5);
    SellCar(ds, 4, 4, 5);
    SellCar(ds, 4, 4, 5);
    SellCar(ds, 4, 5, 26);
    SellCar(ds, 4, 6, 7);
    SellCar(ds, 4, 7, 12);
    DSset* set4=((*((DSManager *)(ds))->sets)[4]);
    AddAgency(ds);
    SellCar(ds, 5, 8, 15);
    SellCar(ds, 5, 9, 1);
    SellCar(ds, 5, 10, 1);
    SellCar(ds, 5, 10, 1);
    SellCar(ds, 5, 10, 1);
    DSset* set5=((*((DSManager *)(ds))->sets)[5]);
    AddAgency(ds);
    SellCar(ds, 6, 11, 1);
    SellCar(ds, 6, 11, 1);
    SellCar(ds, 6, 11, 15);
    SellCar(ds, 6, 12, 5);
    DSset* set6=((*((DSManager *)(ds))->sets)[6]);
    AddAgency(ds);
    SellCar(ds, 7, 13, 7);
    SellCar(ds, 7, 14, 2);
    SellCar(ds, 7, 15, 26);
    DSset* set7=((*((DSManager *)(ds))->sets)[7]);
     std::cout << "4 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[4])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[4])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    std::cout << "5 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[5])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[5])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    UniteAgencies(ds, 4, 5);
    set4=((*((DSManager *)(ds))->sets)[4]);
    set5=((*((DSManager *)(ds))->sets)[5]);
    std::cout << "4 5 unite" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[4])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[4])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
     std::cout << "6 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[6])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[6])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    std::cout << "7 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[7])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[7])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    UniteAgencies(ds, 6, 7);
    set6=((*((DSManager *)(ds))->sets)[6]);
    std::cout << "6 7 unite" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[6])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[6])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    set7=((*((DSManager *)(ds))->sets)[7]);
    UniteAgencies(ds, 6, 8);
    UniteAgencies(ds, -6, 8);
    set6=((*((DSManager *)(ds))->sets)[6]);
    UniteAgencies(ds, 6, -8);
    SellCar(ds, 4, 4, 2);
    SellCar(ds, 4, 7, 2);
    SellCar(ds, 5, 9, 3);
    SellCar(ds, 6, 16, 7);
     std::cout << "0 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    std::cout << "1 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[1])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[1])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    UniteAgencies(ds, 0, 2);
    std::cout << "0 1 unite" <<std::endl;
    set0=((*((DSManager *)(ds))->sets)[0]);
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    set2=((*((DSManager *)(ds))->sets)[2]);
    UniteAgencies(ds, 8, 0);
     std::cout << "0 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    std::cout << "4 trees" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[4])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[4])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;
    UniteAgencies(ds, 0, 4);
    set0=((*((DSManager *)(ds))->sets)[0]);
    std::cout << "0 4 unite" <<std::endl;
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    std::cout << "--------------------------" <<std::endl;  
    set4=((*((DSManager *)(ds))->sets)[4]);
    SellCar(ds, 0, 5, 1);
    (*((*((DSManager *)(ds))->sets)[0])).id_tree->print();
    (*((*((DSManager *)(ds))->sets)[0])).ranked_tree->print();
    set0=((*((DSManager *)(ds))->sets)[0]);
    Quit(&ds);
    return 0;
}